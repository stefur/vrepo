name: Package Builder

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REPOSITORY_DIR: repository-${{ matrix.config.arch }}

    container:
      image: ghcr.io/void-linux/void-glibc-full:20250901R1
      options: --platform ${{ matrix.config.platform }} --privileged

    strategy:
      fail-fast: false
      matrix:
        config:
          - arch: x86_64
            platform: linux/amd64

    steps:
      - name: Prepare container
        run: |
          xbps-install -Syu xbps && xbps-install -yu && xbps-install -y bash curl git sudo xtools

          useradd -G xbuilder -M builder

      - uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Init submodules shallowly
        run: |
          git config --global --add safe.directory $(pwd)
          git submodule update --init --recursive --depth 1

      - name: Build packages
        run: |
          echo XBPS_ALLOW_RESTRICTED=yes >> void-packages/etc/conf
          echo XBPS_CHROOT_CMD=uchroot >> void-packages/etc/conf
          chown -R builder:builder .
          sudo -Eu builder mkdir -p ${REPOSITORY_DIR}

          sudo -Eu builder ./void-packages/xbps-src binary-bootstrap

          for pkgdir in pkgs/*; do
            pkg=$(basename "$pkgdir")
            srcfile="$pkgdir/template"
            destdir="$(pwd)/void-packages/srcpkgs/$pkg"

            echo "Building package: $pkg"

            sudo -Eu builder mkdir -p "$destdir"
            sudo -Eu builder cp "$srcfile" "$destdir/template"

            cd void-packages
            sudo -Eu builder xlint "$pkg" || exit 1
            sudo -Eu builder ./xbps-src pkg -Q "$pkg" || exit 1
            cd ..
          done

          while IFS= read -r pkg; do
            [ -z "$pkg" ] && continue
            [[ "$pkg" =~ ^# ]] && continue

            echo "Building package: $pkg"
            sudo -Eu builder ./void-packages/xbps-src pkg -Q "$pkg"
          done < extras.txt

          sudo -Eu builder find $(pwd)/void-packages/hostdir/binpkgs -type f -name '*.xbps' -exec mv {} ${REPOSITORY_DIR}/ \;

      - name: Sign repository and packages
        run: |
          echo -n "${{ secrets.SIGNING_KEY }}" > private.pem

          xbps-rindex -a ${REPOSITORY_DIR}/*.xbps
          xbps-rindex --sign \
            --signedby "stefur <stefan@furne.net>" \
            --privkey private.pem \
            ${REPOSITORY_DIR}
          for pkg in ${REPOSITORY_DIR}/*.xbps; do
            xbps-rindex --privkey private.pem --sign-pkg "$pkg"
          done

      - name: Prepare artifacts
        run: |
          mkdir -p artifacts
          cp -r $(pwd)/${REPOSITORY_DIR}/* $(pwd)/artifacts/ || true

      - name: Upload changed packages
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPOSITORY_DIR }}
          path: artifacts/

  merge:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Init submodules shallowly
        run: |
          git config --global --add safe.directory $(pwd)
          git submodule update --init --recursive --depth 1

      - name: Download all build artifacts
        uses: actions/download-artifact@v4

      - name: Merge artifacts
        run: |
          mkdir -p repository
          for arch_dir in repository-*; do
            for pkg in $arch_dir/*; do
              pkgname=$(basename "$pkg")
              dest="repository/$pkgname"
              mkdir -p "$(dirname "$dest")"
              mv "$pkg" "$dest"
            done
          done

      - name: Generate directory listing
        uses: jayanta525/github-pages-directory-listing@v4.0.0
        with:
          folder: repository

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: repository

  deploy:
    needs: merge
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
